<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DeathsDataSet" targetNamespace="http://tempuri.org/DeathsDataSet.xsd" xmlns:mstns="http://tempuri.org/DeathsDataSet.xsd" xmlns="http://tempuri.org/DeathsDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DeathsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DeathsConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TimeSeriesAnalysis.Properties.Settings.GlobalReference.Default.DeathsConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="t2TableAdapter" GeneratorDataComponentClassName="t2TableAdapter" Name="t2" UserDataComponentName="t2TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DeathsConnectionString (Settings)" DbObjectName="Deaths.dbo.t2" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[t2] WHERE (([id] = @Original_id) AND ([value] = @Original_value))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[t2] ([id], [value]) VALUES (@id, @value);
SELECT id, value FROM t2 WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, value FROM dbo.t2</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[t2] SET [id] = @id, [value] = @value WHERE (([id] = @Original_id) AND ([value] = @Original_value));
SELECT id, value FROM t2 WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="value" DataSetColumn="value" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Test PredictionsTableAdapter" GeneratorDataComponentClassName="Test_PredictionsTableAdapter" Name="Test Predictions" UserDataComponentName="Test PredictionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DeathsConnectionString (Settings)" DbObjectName="Deaths.dbo.[Test Predictions]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Test Predictions] ([PredictQuantity.$TIME], [PredictQuantity.Value]) VALUES (@p1, @p4)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@p1" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="PredictQuantity.$TIME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@p4" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="PredictQuantity.Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [PredictQuantity.$TIME], [PredictQuantity.Value] FROM dbo.[Test Predictions]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PredictQuantity.$TIME" DataSetColumn="PredictQuantity_$TIME" />
              <Mapping SourceColumn="PredictQuantity.Value" DataSetColumn="PredictQuantity_Value" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Test_PredictionsTableAdapter" GeneratorDataComponentClassName="Test_PredictionsTableAdapter1" Name="Test_Predictions" UserDataComponentName="Test_PredictionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DeathsConnectionString (Settings)" DbObjectName="Deaths.dbo.Test_Predictions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Test_Predictions] ([PredictQuantity.$TIME], [PredictQuantity.Value]) VALUES (@p1, @p4)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@p1" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="PredictQuantity.$TIME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@p4" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="PredictQuantity.Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [PredictQuantity.$TIME], [PredictQuantity.Value] FROM dbo.Test_Predictions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PredictQuantity.$TIME" DataSetColumn="PredictQuantity_$TIME" />
              <Mapping SourceColumn="PredictQuantity.Value" DataSetColumn="PredictQuantity_Value" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DeathsDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DeathsDataSet" msprop:Generator_UserDSName="DeathsDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="t2" msprop:Generator_TableClassName="t2DataTable" msprop:Generator_TableVarName="tablet2" msprop:Generator_TablePropName="t2" msprop:Generator_RowDeletingName="t2RowDeleting" msprop:Generator_RowChangingName="t2RowChanging" msprop:Generator_RowEvHandlerName="t2RowChangeEventHandler" msprop:Generator_RowDeletedName="t2RowDeleted" msprop:Generator_UserTableName="t2" msprop:Generator_RowChangedName="t2RowChanged" msprop:Generator_RowEvArgName="t2RowChangeEvent" msprop:Generator_RowClassName="t2Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:dateTime" />
              <xs:element name="value" msprop:Generator_ColumnVarNameInTable="columnvalue" msprop:Generator_ColumnPropNameInRow="value" msprop:Generator_ColumnPropNameInTable="valueColumn" msprop:Generator_UserColumnName="value" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Test_x0020_Predictions" msprop:Generator_TableClassName="Test_PredictionsDataTable" msprop:Generator_TableVarName="tableTest_Predictions" msprop:Generator_TablePropName="Test_Predictions" msprop:Generator_RowDeletingName="Test_PredictionsRowDeleting" msprop:Generator_RowChangingName="Test_PredictionsRowChanging" msprop:Generator_RowEvHandlerName="Test_PredictionsRowChangeEventHandler" msprop:Generator_RowDeletedName="Test_PredictionsRowDeleted" msprop:Generator_UserTableName="Test Predictions" msprop:Generator_RowChangedName="Test_PredictionsRowChanged" msprop:Generator_RowEvArgName="Test_PredictionsRowChangeEvent" msprop:Generator_RowClassName="Test_PredictionsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PredictQuantity__x0024_TIME" msprop:Generator_ColumnVarNameInTable="_columnPredictQuantity__TIME" msprop:Generator_ColumnPropNameInRow="_PredictQuantity__TIME" msprop:Generator_ColumnPropNameInTable="_PredictQuantity__TIMEColumn" msprop:Generator_UserColumnName="PredictQuantity_$TIME" type="xs:dateTime" minOccurs="0" />
              <xs:element name="PredictQuantity_Value" msprop:Generator_ColumnVarNameInTable="columnPredictQuantity_Value" msprop:Generator_ColumnPropNameInRow="PredictQuantity_Value" msprop:Generator_ColumnPropNameInTable="PredictQuantity_ValueColumn" msprop:Generator_UserColumnName="PredictQuantity_Value" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Test_Predictions" msprop:Generator_TableClassName="_Test_PredictionsDataTable" msprop:Generator_TableVarName="_tableTest_Predictions" msprop:Generator_TablePropName="_Test_Predictions" msprop:Generator_RowDeletingName="_Test_PredictionsRowDeleting" msprop:Generator_RowChangingName="_Test_PredictionsRowChanging" msprop:Generator_RowEvHandlerName="_Test_PredictionsRowChangeEventHandler" msprop:Generator_RowDeletedName="_Test_PredictionsRowDeleted" msprop:Generator_UserTableName="Test_Predictions" msprop:Generator_RowChangedName="_Test_PredictionsRowChanged" msprop:Generator_RowEvArgName="_Test_PredictionsRowChangeEvent" msprop:Generator_RowClassName="_Test_PredictionsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PredictQuantity__x0024_TIME" msprop:Generator_ColumnVarNameInTable="_columnPredictQuantity__TIME" msprop:Generator_ColumnPropNameInRow="_PredictQuantity__TIME" msprop:Generator_ColumnPropNameInTable="_PredictQuantity__TIMEColumn" msprop:Generator_UserColumnName="PredictQuantity_$TIME" type="xs:dateTime" minOccurs="0" />
              <xs:element name="PredictQuantity_Value" msprop:Generator_ColumnVarNameInTable="columnPredictQuantity_Value" msprop:Generator_ColumnPropNameInRow="PredictQuantity_Value" msprop:Generator_ColumnPropNameInTable="PredictQuantity_ValueColumn" msprop:Generator_UserColumnName="PredictQuantity_Value" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:t2" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
</xs:schema>